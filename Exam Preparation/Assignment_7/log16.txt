Id: 1
Execution stack: 
(int v;(v=0;(repeat((Fork (print(v);v=v - 1);v=v + 1)) until (v == 3);(int x;(int y;(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v * 10))))))))))))
Symbol table: 
Output list: 
File table:
Heap memory:

Id: 1
Execution stack: 
int v
(v=0;(repeat((Fork (print(v);v=v - 1);v=v + 1)) until (v == 3);(int x;(int y;(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v * 10)))))))))))
Symbol table: 
Output list: 
File table:
Heap memory:

Id: 1
Execution stack: 
int v
(v=0;(repeat((Fork (print(v);v=v - 1);v=v + 1)) until (v == 3);(int x;(int y;(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v * 10)))))))))))
Symbol table: 
Output list: 
File table:
Heap memory:

Id: 1
Execution stack: 
(v=0;(repeat((Fork (print(v);v=v - 1);v=v + 1)) until (v == 3);(int x;(int y;(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v * 10)))))))))))
Symbol table: 
v -> 0
Output list: 
File table:
Heap memory:

Id: 1
Execution stack: 
(v=0;(repeat((Fork (print(v);v=v - 1);v=v + 1)) until (v == 3);(int x;(int y;(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v * 10)))))))))))
Symbol table: 
v -> 0
Output list: 
File table:
Heap memory:

Id: 1
Execution stack: 
v=0
(repeat((Fork (print(v);v=v - 1);v=v + 1)) until (v == 3);(int x;(int y;(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v * 10))))))))))
Symbol table: 
v -> 0
Output list: 
File table:
Heap memory:

Id: 1
Execution stack: 
v=0
(repeat((Fork (print(v);v=v - 1);v=v + 1)) until (v == 3);(int x;(int y;(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v * 10))))))))))
Symbol table: 
v -> 0
Output list: 
File table:
Heap memory:

Id: 1
Execution stack: 
(repeat((Fork (print(v);v=v - 1);v=v + 1)) until (v == 3);(int x;(int y;(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v * 10))))))))))
Symbol table: 
v -> 0
Output list: 
File table:
Heap memory:

Id: 1
Execution stack: 
(repeat((Fork (print(v);v=v - 1);v=v + 1)) until (v == 3);(int x;(int y;(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v * 10))))))))))
Symbol table: 
v -> 0
Output list: 
File table:
Heap memory:

Id: 1
Execution stack: 
repeat((Fork (print(v);v=v - 1);v=v + 1)) until (v == 3)
(int x;(int y;(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v * 10)))))))))
Symbol table: 
v -> 0
Output list: 
File table:
Heap memory:

Id: 1
Execution stack: 
repeat((Fork (print(v);v=v - 1);v=v + 1)) until (v == 3)
(int x;(int y;(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v * 10)))))))))
Symbol table: 
v -> 0
Output list: 
File table:
Heap memory:

Id: 1
Execution stack: 
((Fork (print(v);v=v - 1);v=v + 1);while(!(v == 3)){(Fork (print(v);v=v - 1);v=v + 1)})
(int x;(int y;(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v * 10)))))))))
Symbol table: 
v -> 0
Output list: 
File table:
Heap memory:

Id: 1
Execution stack: 
((Fork (print(v);v=v - 1);v=v + 1);while(!(v == 3)){(Fork (print(v);v=v - 1);v=v + 1)})
(int x;(int y;(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v * 10)))))))))
Symbol table: 
v -> 0
Output list: 
File table:
Heap memory:

Id: 1
Execution stack: 
(Fork (print(v);v=v - 1);v=v + 1)
while(!(v == 3)){(Fork (print(v);v=v - 1);v=v + 1)}
(int x;(int y;(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v * 10)))))))))
Symbol table: 
v -> 0
Output list: 
File table:
Heap memory:

Id: 1
Execution stack: 
(Fork (print(v);v=v - 1);v=v + 1)
while(!(v == 3)){(Fork (print(v);v=v - 1);v=v + 1)}
(int x;(int y;(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v * 10)))))))))
Symbol table: 
v -> 0
Output list: 
File table:
Heap memory:

Id: 1
Execution stack: 
Fork (print(v);v=v - 1)
v=v + 1
while(!(v == 3)){(Fork (print(v);v=v - 1);v=v + 1)}
(int x;(int y;(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v * 10)))))))))
Symbol table: 
v -> 0
Output list: 
File table:
Heap memory:

Id: 1
Execution stack: 
Fork (print(v);v=v - 1)
v=v + 1
while(!(v == 3)){(Fork (print(v);v=v - 1);v=v + 1)}
(int x;(int y;(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v * 10)))))))))
Symbol table: 
v -> 0
Output list: 
File table:
Heap memory:

Id: 1
Execution stack: 
v=v + 1
while(!(v == 3)){(Fork (print(v);v=v - 1);v=v + 1)}
(int x;(int y;(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v * 10)))))))))
Symbol table: 
v -> 0
Output list: 
File table:
Heap memory:

Id: 2
Execution stack: 
(print(v);v=v - 1)
Symbol table: 
v -> 0
Output list: 
File table:
Heap memory:

Id: 1
Execution stack: 
v=v + 1
while(!(v == 3)){(Fork (print(v);v=v - 1);v=v + 1)}
(int x;(int y;(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v * 10)))))))))
Symbol table: 
v -> 0
Output list: 
File table:
Heap memory:

Id: 2
Execution stack: 
(print(v);v=v - 1)
Symbol table: 
v -> 0
Output list: 
File table:
Heap memory:

Id: 1
Execution stack: 
while(!(v == 3)){(Fork (print(v);v=v - 1);v=v + 1)}
(int x;(int y;(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v * 10)))))))))
Symbol table: 
v -> 1
Output list: 
File table:
Heap memory:

Id: 2
Execution stack: 
print(v)
v=v - 1
Symbol table: 
v -> 0
Output list: 
File table:
Heap memory:

Id: 1
Execution stack: 
while(!(v == 3)){(Fork (print(v);v=v - 1);v=v + 1)}
(int x;(int y;(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v * 10)))))))))
Symbol table: 
v -> 1
Output list: 
File table:
Heap memory:

Id: 2
Execution stack: 
print(v)
v=v - 1
Symbol table: 
v -> 0
Output list: 
File table:
Heap memory:

Id: 1
Execution stack: 
(Fork (print(v);v=v - 1);v=v + 1)
while(!(v == 3)){(Fork (print(v);v=v - 1);v=v + 1)}
(int x;(int y;(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v * 10)))))))))
Symbol table: 
v -> 1
Output list: 
0
File table:
Heap memory:

Id: 2
Execution stack: 
v=v - 1
Symbol table: 
v -> 0
Output list: 
0
File table:
Heap memory:

Id: 1
Execution stack: 
(Fork (print(v);v=v - 1);v=v + 1)
while(!(v == 3)){(Fork (print(v);v=v - 1);v=v + 1)}
(int x;(int y;(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v * 10)))))))))
Symbol table: 
v -> 1
Output list: 
0
File table:
Heap memory:

Id: 2
Execution stack: 
v=v - 1
Symbol table: 
v -> 0
Output list: 
0
File table:
Heap memory:

Id: 1
Execution stack: 
Fork (print(v);v=v - 1)
v=v + 1
while(!(v == 3)){(Fork (print(v);v=v - 1);v=v + 1)}
(int x;(int y;(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v * 10)))))))))
Symbol table: 
v -> 1
Output list: 
0
File table:
Heap memory:

Id: 2
Execution stack: 
Symbol table: 
v -> -1
Output list: 
0
File table:
Heap memory:

Id: 1
Execution stack: 
Fork (print(v);v=v - 1)
v=v + 1
while(!(v == 3)){(Fork (print(v);v=v - 1);v=v + 1)}
(int x;(int y;(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v * 10)))))))))
Symbol table: 
v -> 1
Output list: 
0
File table:
Heap memory:

Id: 1
Execution stack: 
v=v + 1
while(!(v == 3)){(Fork (print(v);v=v - 1);v=v + 1)}
(int x;(int y;(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v * 10)))))))))
Symbol table: 
v -> 1
Output list: 
0
File table:
Heap memory:

Id: 3
Execution stack: 
(print(v);v=v - 1)
Symbol table: 
v -> 1
Output list: 
0
File table:
Heap memory:

Id: 1
Execution stack: 
v=v + 1
while(!(v == 3)){(Fork (print(v);v=v - 1);v=v + 1)}
(int x;(int y;(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v * 10)))))))))
Symbol table: 
v -> 1
Output list: 
0
File table:
Heap memory:

Id: 3
Execution stack: 
(print(v);v=v - 1)
Symbol table: 
v -> 1
Output list: 
0
File table:
Heap memory:

Id: 1
Execution stack: 
while(!(v == 3)){(Fork (print(v);v=v - 1);v=v + 1)}
(int x;(int y;(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v * 10)))))))))
Symbol table: 
v -> 2
Output list: 
0
File table:
Heap memory:

Id: 3
Execution stack: 
print(v)
v=v - 1
Symbol table: 
v -> 1
Output list: 
0
File table:
Heap memory:

Id: 1
Execution stack: 
while(!(v == 3)){(Fork (print(v);v=v - 1);v=v + 1)}
(int x;(int y;(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v * 10)))))))))
Symbol table: 
v -> 2
Output list: 
0
File table:
Heap memory:

Id: 3
Execution stack: 
print(v)
v=v - 1
Symbol table: 
v -> 1
Output list: 
0
File table:
Heap memory:

Id: 1
Execution stack: 
(Fork (print(v);v=v - 1);v=v + 1)
while(!(v == 3)){(Fork (print(v);v=v - 1);v=v + 1)}
(int x;(int y;(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v * 10)))))))))
Symbol table: 
v -> 2
Output list: 
0
1
File table:
Heap memory:

Id: 3
Execution stack: 
v=v - 1
Symbol table: 
v -> 1
Output list: 
0
1
File table:
Heap memory:

Id: 1
Execution stack: 
(Fork (print(v);v=v - 1);v=v + 1)
while(!(v == 3)){(Fork (print(v);v=v - 1);v=v + 1)}
(int x;(int y;(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v * 10)))))))))
Symbol table: 
v -> 2
Output list: 
0
1
File table:
Heap memory:

Id: 3
Execution stack: 
v=v - 1
Symbol table: 
v -> 1
Output list: 
0
1
File table:
Heap memory:

Id: 1
Execution stack: 
Fork (print(v);v=v - 1)
v=v + 1
while(!(v == 3)){(Fork (print(v);v=v - 1);v=v + 1)}
(int x;(int y;(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v * 10)))))))))
Symbol table: 
v -> 2
Output list: 
0
1
File table:
Heap memory:

Id: 3
Execution stack: 
Symbol table: 
v -> 0
Output list: 
0
1
File table:
Heap memory:

Id: 1
Execution stack: 
Fork (print(v);v=v - 1)
v=v + 1
while(!(v == 3)){(Fork (print(v);v=v - 1);v=v + 1)}
(int x;(int y;(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v * 10)))))))))
Symbol table: 
v -> 2
Output list: 
0
1
File table:
Heap memory:

Id: 1
Execution stack: 
v=v + 1
while(!(v == 3)){(Fork (print(v);v=v - 1);v=v + 1)}
(int x;(int y;(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v * 10)))))))))
Symbol table: 
v -> 2
Output list: 
0
1
File table:
Heap memory:

Id: 4
Execution stack: 
(print(v);v=v - 1)
Symbol table: 
v -> 2
Output list: 
0
1
File table:
Heap memory:

Id: 1
Execution stack: 
v=v + 1
while(!(v == 3)){(Fork (print(v);v=v - 1);v=v + 1)}
(int x;(int y;(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v * 10)))))))))
Symbol table: 
v -> 2
Output list: 
0
1
File table:
Heap memory:

Id: 4
Execution stack: 
(print(v);v=v - 1)
Symbol table: 
v -> 2
Output list: 
0
1
File table:
Heap memory:

Id: 1
Execution stack: 
while(!(v == 3)){(Fork (print(v);v=v - 1);v=v + 1)}
(int x;(int y;(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v * 10)))))))))
Symbol table: 
v -> 3
Output list: 
0
1
File table:
Heap memory:

Id: 4
Execution stack: 
print(v)
v=v - 1
Symbol table: 
v -> 2
Output list: 
0
1
File table:
Heap memory:

Id: 1
Execution stack: 
while(!(v == 3)){(Fork (print(v);v=v - 1);v=v + 1)}
(int x;(int y;(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v * 10)))))))))
Symbol table: 
v -> 3
Output list: 
0
1
File table:
Heap memory:

Id: 4
Execution stack: 
print(v)
v=v - 1
Symbol table: 
v -> 2
Output list: 
0
1
File table:
Heap memory:

Id: 1
Execution stack: 
(int x;(int y;(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v * 10)))))))))
Symbol table: 
v -> 3
Output list: 
0
1
2
File table:
Heap memory:

Id: 4
Execution stack: 
v=v - 1
Symbol table: 
v -> 2
Output list: 
0
1
2
File table:
Heap memory:

Id: 1
Execution stack: 
(int x;(int y;(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v * 10)))))))))
Symbol table: 
v -> 3
Output list: 
0
1
2
File table:
Heap memory:

Id: 4
Execution stack: 
v=v - 1
Symbol table: 
v -> 2
Output list: 
0
1
2
File table:
Heap memory:

Id: 1
Execution stack: 
int x
(int y;(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v * 10))))))))
Symbol table: 
v -> 3
Output list: 
0
1
2
File table:
Heap memory:

Id: 4
Execution stack: 
Symbol table: 
v -> 1
Output list: 
0
1
2
File table:
Heap memory:

Id: 1
Execution stack: 
int x
(int y;(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v * 10))))))))
Symbol table: 
v -> 3
Output list: 
0
1
2
File table:
Heap memory:

Id: 1
Execution stack: 
(int y;(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v * 10))))))))
Symbol table: 
v -> 3
x -> 0
Output list: 
0
1
2
File table:
Heap memory:

Id: 1
Execution stack: 
(int y;(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v * 10))))))))
Symbol table: 
v -> 3
x -> 0
Output list: 
0
1
2
File table:
Heap memory:

Id: 1
Execution stack: 
int y
(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v * 10)))))))
Symbol table: 
v -> 3
x -> 0
Output list: 
0
1
2
File table:
Heap memory:

Id: 1
Execution stack: 
int y
(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v * 10)))))))
Symbol table: 
v -> 3
x -> 0
Output list: 
0
1
2
File table:
Heap memory:

Id: 1
Execution stack: 
(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v * 10)))))))
Symbol table: 
v -> 3
x -> 0
y -> 0
Output list: 
0
1
2
File table:
Heap memory:

Id: 1
Execution stack: 
(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v * 10)))))))
Symbol table: 
v -> 3
x -> 0
y -> 0
Output list: 
0
1
2
File table:
Heap memory:

Id: 1
Execution stack: 
int z
(int w;(x=1;(y=2;(z=3;(w=4;print(v * 10))))))
Symbol table: 
v -> 3
x -> 0
y -> 0
Output list: 
0
1
2
File table:
Heap memory:

Id: 1
Execution stack: 
int z
(int w;(x=1;(y=2;(z=3;(w=4;print(v * 10))))))
Symbol table: 
v -> 3
x -> 0
y -> 0
Output list: 
0
1
2
File table:
Heap memory:

Id: 1
Execution stack: 
(int w;(x=1;(y=2;(z=3;(w=4;print(v * 10))))))
Symbol table: 
v -> 3
x -> 0
y -> 0
z -> 0
Output list: 
0
1
2
File table:
Heap memory:

Id: 1
Execution stack: 
(int w;(x=1;(y=2;(z=3;(w=4;print(v * 10))))))
Symbol table: 
v -> 3
x -> 0
y -> 0
z -> 0
Output list: 
0
1
2
File table:
Heap memory:

Id: 1
Execution stack: 
int w
(x=1;(y=2;(z=3;(w=4;print(v * 10)))))
Symbol table: 
v -> 3
x -> 0
y -> 0
z -> 0
Output list: 
0
1
2
File table:
Heap memory:

Id: 1
Execution stack: 
int w
(x=1;(y=2;(z=3;(w=4;print(v * 10)))))
Symbol table: 
v -> 3
x -> 0
y -> 0
z -> 0
Output list: 
0
1
2
File table:
Heap memory:

Id: 1
Execution stack: 
(x=1;(y=2;(z=3;(w=4;print(v * 10)))))
Symbol table: 
v -> 3
w -> 0
x -> 0
y -> 0
z -> 0
Output list: 
0
1
2
File table:
Heap memory:

Id: 1
Execution stack: 
(x=1;(y=2;(z=3;(w=4;print(v * 10)))))
Symbol table: 
v -> 3
w -> 0
x -> 0
y -> 0
z -> 0
Output list: 
0
1
2
File table:
Heap memory:

Id: 1
Execution stack: 
x=1
(y=2;(z=3;(w=4;print(v * 10))))
Symbol table: 
v -> 3
w -> 0
x -> 0
y -> 0
z -> 0
Output list: 
0
1
2
File table:
Heap memory:

Id: 1
Execution stack: 
x=1
(y=2;(z=3;(w=4;print(v * 10))))
Symbol table: 
v -> 3
w -> 0
x -> 0
y -> 0
z -> 0
Output list: 
0
1
2
File table:
Heap memory:

Id: 1
Execution stack: 
(y=2;(z=3;(w=4;print(v * 10))))
Symbol table: 
v -> 3
w -> 0
x -> 1
y -> 0
z -> 0
Output list: 
0
1
2
File table:
Heap memory:

Id: 1
Execution stack: 
(y=2;(z=3;(w=4;print(v * 10))))
Symbol table: 
v -> 3
w -> 0
x -> 1
y -> 0
z -> 0
Output list: 
0
1
2
File table:
Heap memory:

Id: 1
Execution stack: 
y=2
(z=3;(w=4;print(v * 10)))
Symbol table: 
v -> 3
w -> 0
x -> 1
y -> 0
z -> 0
Output list: 
0
1
2
File table:
Heap memory:

Id: 1
Execution stack: 
y=2
(z=3;(w=4;print(v * 10)))
Symbol table: 
v -> 3
w -> 0
x -> 1
y -> 0
z -> 0
Output list: 
0
1
2
File table:
Heap memory:

Id: 1
Execution stack: 
(z=3;(w=4;print(v * 10)))
Symbol table: 
v -> 3
w -> 0
x -> 1
y -> 2
z -> 0
Output list: 
0
1
2
File table:
Heap memory:

Id: 1
Execution stack: 
(z=3;(w=4;print(v * 10)))
Symbol table: 
v -> 3
w -> 0
x -> 1
y -> 2
z -> 0
Output list: 
0
1
2
File table:
Heap memory:

Id: 1
Execution stack: 
z=3
(w=4;print(v * 10))
Symbol table: 
v -> 3
w -> 0
x -> 1
y -> 2
z -> 0
Output list: 
0
1
2
File table:
Heap memory:

Id: 1
Execution stack: 
z=3
(w=4;print(v * 10))
Symbol table: 
v -> 3
w -> 0
x -> 1
y -> 2
z -> 0
Output list: 
0
1
2
File table:
Heap memory:

Id: 1
Execution stack: 
(w=4;print(v * 10))
Symbol table: 
v -> 3
w -> 0
x -> 1
y -> 2
z -> 3
Output list: 
0
1
2
File table:
Heap memory:

Id: 1
Execution stack: 
(w=4;print(v * 10))
Symbol table: 
v -> 3
w -> 0
x -> 1
y -> 2
z -> 3
Output list: 
0
1
2
File table:
Heap memory:

Id: 1
Execution stack: 
w=4
print(v * 10)
Symbol table: 
v -> 3
w -> 0
x -> 1
y -> 2
z -> 3
Output list: 
0
1
2
File table:
Heap memory:

Id: 1
Execution stack: 
w=4
print(v * 10)
Symbol table: 
v -> 3
w -> 0
x -> 1
y -> 2
z -> 3
Output list: 
0
1
2
File table:
Heap memory:

Id: 1
Execution stack: 
print(v * 10)
Symbol table: 
v -> 3
w -> 4
x -> 1
y -> 2
z -> 3
Output list: 
0
1
2
File table:
Heap memory:

Id: 1
Execution stack: 
print(v * 10)
Symbol table: 
v -> 3
w -> 4
x -> 1
y -> 2
z -> 3
Output list: 
0
1
2
File table:
Heap memory:

Id: 1
Execution stack: 
Symbol table: 
v -> 3
w -> 4
x -> 1
y -> 2
z -> 3
Output list: 
0
1
2
30
File table:
Heap memory:

